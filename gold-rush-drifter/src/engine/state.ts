import type { GameState, Item, Actor, Encounter } from './types'
import { mulberry32, choice } from './rng'
export const SITES=['Drywash Gorge','Widow\'s Step','Red Butte','Split Rock','Calico Gulch','Devil\'s Ladder']
export function starterState(seed=123456):GameState{ return { seed, rollIndex:0, world:{time:0,tickSeconds:1,weather:'clear',event:null,autoTickCap:3}, flags:{autoTick:true,paused:false}, player:{ name:'Drifter', hp:100,maxHp:100, grit:1,marksmanship:1,cunning:1, coin:12,reputation:0, ammo:{revolver:6,reserve:24}, status:[], inventory:[plainsman()], equipped:{weapon:'plainsman',hat:null,coat:null,boots:null,trinket:null}}, town:{ name:'Prospect Crossing', prosperity:0, threat:0, buildings:[ {id:'saloon',tier:1,unlocked:true},{id:'general_store',tier:1,unlocked:true},{id:'sheriff',tier:1,unlocked:true},{id:'livery',tier:1,unlocked:false},{id:'assayer',tier:1,unlocked:false},{id:'blacksmith',tier:2,unlocked:false},{id:'doctor',tier:2,unlocked:false},{id:'newspaper',tier:2,unlocked:false},{id:'bank',tier:3,unlocked:false},{id:'rail_depot',tier:3,unlocked:false} ]}, room:{zone:'Town',id:'main_street',actors:[],effects:[]}, encounter:null, log:[] } }
export function plainsman():Item{ return { id:'plainsman', type:'weapon', name:'Plainsman Revolver', rarity:'common', value:20, affixes:[{id:'quickdraw',value:1}], meta:{ammo:6,cast:0.3,cd:0.7,dmg:[6,9]} } }
export function rollEncounter(state:GameState,type:Encounter['type'],difficulty:0|1|2|3):Encounter{ const rng=mulberry32(state.seed+state.rollIndex++ + state.world.time); const site=choice(rng,SITES); const objective = type==='bounty'?'Capture the target (alive if possible)': type==='escort'?'Deliver the cargo intact': type==='prospect'?'Work the claim before sundown': type==='duel'?'Win the quick-draw': type==='rescue'?'Find and stabilize survivors':'Defend the town'; return { id:'enc_'+(state.seed^state.rollIndex).toString(16), type, site, difficulty, ticks:0, objective, active:true } }
export function spawnEnemies(state:GameState,type:Encounter['type'],diff:number):Actor[]{ const enemies:Actor[]=[]; const add=(kind:string,hp:number,ai:Actor['ai'],acc:number,dmg:[number,number],evasion=5)=>{enemies.push({id:kind+'_'+(enemies.length+1),kind,hp,maxHp:hp,ai,acc,dmg,evasion,status:[]})}; if(type==='bounty'){ add('bandit_grunt',20,'aggressive',55,[6,9]); add('bandit_grunt',20,'aggressive',55,[6,9]); if(diff>=1) add('bandit_sharpshooter',18,'sniper',70,[7,11],10) } else if(type==='escort'){ add('raider_brute',28,'aggressive',50,[9,12]); if(diff>=2) add('bandit_grunt',20,'aggressive',55,[6,9]) } else if(type==='prospect'){ add('claim_jumper',16,'skirmisher',60,[5,8],12) } else if(type==='duel'){ add('duelist',24,'skirmisher',65,[7,11],15) } else if(type==='rescue'){ add('raider_brute',28,'aggressive',50,[9,12]) } else { add('bandit_grunt',20,'aggressive',55,[6,9]); add('bandit_grunt',20,'aggressive',55,[6,9]); add('raider_brute',28,'aggressive',50,[9,12]) } return enemies }