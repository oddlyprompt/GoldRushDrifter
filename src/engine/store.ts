import { create } from 'zustand'
import type { GameState } from './types'
import { starterState, rollEncounter, spawnEnemies } from './state'
import { processTick, queuePlayerAttack, endEncounter } from './combat'
interface GameStore{ state:GameState; input:string; setInput:(v:string)=>void; act:(cmd:string)=>void; tick:(n?:number)=>void }
export const useGame=create<GameStore>((set,get)=>({ state:starterState(), input:'', setInput:(v)=>set({input:v}), act:(cmd)=>{ const S=get().state; const [verb,arg]=cmd.trim().split(/\s+/,2); if(verb==='help'){ S.log.push('Commands: help, map, bounty <easy|std|hard|deadly>, attack, reload, flee, inv') } else if(verb==='map'){ S.log.push('You are in Prospect Crossing. Buildings: Saloon, Sheriff, General Store.') } else if(verb==='attack'){ queuePlayerAttack(S,arg) } else if(verb==='flee'){ if(S.encounter?.active){ endEncounter(S,false); S.room={zone:'Town',id:'main_street',actors:[],effects:[]} } } else if(verb==='reload'){ const need=6-S.player.ammo.revolver; const take=Math.max(0,Math.min(need,S.player.ammo.reserve)); S.player.ammo.revolver+=take; S.player.ammo.reserve-=take; S.log.push(`Reloaded ${take} rounds.`) } else if(verb==='bounty'){ const diff=(arg==='easy'?0:arg==='std'?1:arg==='hard'?2:arg==='deadly'?3:1) as 0|1|2|3; S.encounter=rollEncounter(S,'bounty',diff); S.room={zone:'Wilds',id:S.encounter.site,actors:spawnEnemies(S,'bounty',diff),effects:[]}; S.log.push(`Bounty at ${S.encounter.site}. Difficulty ${diff}.`) } else { S.log.push(`Unknown: ${cmd}`) } set({state:S}) }, tick:(n=1)=>{ const S=get().state; for(let i=0;i<n;i++){ S.world.time+=S.world.tickSeconds; if(S.encounter?.active){ processTick(S); S.encounter.ticks++ } } set({state:S}) } }))